{
	"info": {
		"_postman_id": "861f8ff2-1c64-41ba-9399-f8020c40c2be",
		"name": "hw6_tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24643335"
	},
	"item": [
		{
			"name": "create user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							"",
							"",
							"pm.globals.set(\"user1.username\", \"artem\");",
							"pm.globals.set(\"user1.password\", \"1111\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"artem\",\n    \"password\": \"1111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/auth/artem/sign-up",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"auth",
						"artem",
						"sign-up"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							"",
							"pm.globals.set(\"user2.username\", \"bob\");",
							"pm.globals.set(\"user2.password\", \"2222\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"bob\",\n    \"password\": \"2222\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/auth/artem/sign-up",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"auth",
						"artem",
						"sign-up"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users empty user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users empty user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 creates user Artem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"artem\",\n    \"sur_name\": \"some\",\n    \"age\": 20\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 creates user Alice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"alice\",\n    \"sur_name\": \"some-alice\",\n    \"age\": 23\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user2 creates user Alien",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"alien\",\n    \"sur_name\": \"some-alien\",\n    \"age\": 199\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users by user2 -> len 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).length(1)",
							"})",
							"",
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).length(1)",
							"    pm.expect(pm.response.json()[\"users\"][0].Firstname).is.equal(\"alien\")",
							"})",
							"",
							"pm.globals.set(\"user2.alien.id\", pm.response.json()[\"users\"][0].ID);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users by user1 -> len 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).length(2)",
							"    pm.expect(pm.response.json()[\"users\"][0].Firstname).is.equal(\"artem\")",
							"    pm.expect(pm.response.json()[\"users\"][1].Firstname).is.equal(\"alice\")",
							"})",
							"",
							"pm.globals.set(\"user1.artem.id\", pm.response.json()[\"users\"][0].ID);",
							"pm.globals.set(\"user1.alice.id\", pm.response.json()[\"users\"][1].ID);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user2 delete Alice owned by user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user1.alice.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user1.alice.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 delete Alien owned by user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user2.alien.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user2.alien.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 delete Artem owned by user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user1.artem.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user1.artem.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 change owner for Alien to user1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"katya\",\n    \"sur_name\": \"hello\",\n    \"age\": 22,\n    \"owned_by_username\": \"{{user1.username}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user2.alien.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user2.alien.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 change owner for Alice to user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"alice\",\n    \"sur_name\": \"some-alice\",\n    \"age\": 33,\n    \"owned_by_username\": \"{{user2.username}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user1.alice.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user1.alice.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users by user1 -> len 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).length(0)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user Alice by user1 - not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(404)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user1.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user1.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user1.alice.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user1.alice.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "list users by user2 -> len 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).to.be.an(\"array\")",
							"})",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required schema for users\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.users).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Users array is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.users).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"",
							"    pm.expect(pm.response.json()[\"users\"]).length(2)",
							"    pm.expect(pm.response.json()[\"users\"][0].Firstname).is.equal(\"alien\")",
							"    pm.expect(pm.response.json()[\"users\"][1].Firstname).is.equal(\"alice\")",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "user2 delete Alien owned by user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user2.alien.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user2.alien.id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "user2 delete Alice owned by user2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test and res\", function() {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user2.password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user2.username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/otusapp/artem/users/{{user1.alice.id}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"otusapp",
						"artem",
						"users",
						"{{user1.alice.id}}"
					]
				}
			},
			"response": []
		}
	]
}